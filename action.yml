name: External LLM Vulnerability Scan
description: Scan PR diffs for vulnerabilities using external LLM-based service.

inputs:
  base_ref:
    description: Base branch to compare
    required: true
  head_ref:
    description: Head branch to compare
    required: true

runs:
  using: "composite"
  steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Fetch base branch and get diff (excluding workflow files)
      id: diff
      shell: bash
      run: |
        git fetch origin ${{ inputs.base_ref }}
        DIFF=$(git diff --unified=0 origin/${{ inputs.base_ref }} ${{ inputs.head_ref }} -- . ':(exclude).github/workflows/**')
        if [ -z "$DIFF" ]; then
          echo "skip=true" >> "$GITHUB_OUTPUT"
          exit 0
        fi

        echo "$DIFF" > diff.patch
        echo "patch<<EOF" >> "$GITHUB_OUTPUT"
        cat diff.patch >> "$GITHUB_OUTPUT"
        echo "EOF" >> "$GITHUB_OUTPUT"

    - name: Send diff to external vulnerability service
      if: steps.diff.outputs.skip != 'true'
      id: advice
      shell: bash
      env:
        SERVICE_URL: ${{ secrets.CODE_ADVICE_URL }}
      run: |
        echo "${{ steps.diff.outputs.patch }}" > diff.patch
        
        RESPONSE=$(curl -sS \
          -X POST "${SERVICE_URL}" \
          -H "Accept: text/plain" \
          -H "Content-Type: text/plain" \
          --data-binary @diff.patch)
        
        echo "$RESPONSE" > scan.txt
        echo "text<<EOF" >> "$GITHUB_OUTPUT"
        cat scan.txt >> "$GITHUB_OUTPUT"
        echo "EOF" >> "$GITHUB_OUTPUT"

    - name: Save scan output to file
      if: steps.diff.outputs.skip != 'true'
      shell: bash
      run: |
        echo "${{ steps.advice.outputs.text }}" > scan.txt

    - name: Fail build on detected vulnerabilities
      if: steps.diff.outputs.skip != 'true'
      shell: bash
      run: |
        if grep -q 'Issue' scan.txt; then
          echo "ðŸš¨ Vulnerabilities detected! Failing the build."
          cat scan.txt
          exit 1
        else
          echo "âœ… No vulnerabilities found, build OK."
        fi
